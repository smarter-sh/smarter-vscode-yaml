---
#------------------------------------------------------------------------------
# Lawrence McDaniel - https://lawrencemcdaniel.com
# Version Bump Workflow for VS Code Extension
#
# Calculate the version of the 'main' branch based on semantic-release rules.
# Compares the existing value in package.json to the calculated value.
# If they are different, it will update package.json and push the changes
# to the main branch.
#------------------------------------------------------------------------------
name: Semantic Version Bump

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  bump-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node.js environment
        uses: actions/setup-node@v4

      - name: Install dependencies
        run: npm install

      - name: Fetch latest GitHub release version
        id: latest_release
        run: |
          LATEST_RELEASE=$(curl -H "Authorization: token ${{ secrets.PAT }}" --silent "https://api.github.com/repos/${{ github.repository }}/releases/latest" | jq -r .tag_name)
          LATEST_RELEASE=${LATEST_RELEASE#v}  # Remove 'v' from the beginning of the version
          echo "LATEST_RELEASE=$LATEST_RELEASE" >> $GITHUB_ENV

      - name: Get current version from package.json
        id: current_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      - name: Calculate next version
        id: version
        run: |
          NEXT_VERSION=$(npx semantic-release --dry-run --no-ci | awk '/The next release version is/{print $NF}')
          NEXT_VERSION=${NEXT_VERSION:-$CURRENT_VERSION}
          VERSION_CHANGED=$([ "$CURRENT_VERSION" != "$NEXT_VERSION" ] && echo "true" || echo "false")
          echo "NEXT_VERSION=$NEXT_VERSION" >> $GITHUB_ENV
          echo "VERSION_CHANGED=$VERSION_CHANGED" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Update package.json version
        if: env.VERSION_CHANGED == 'true'
        run: |
          npm version ${{ env.NEXT_VERSION }} --no-git-tag-version
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json
          git commit -m "chore: [gh] Update package.json to version ${{ env.NEXT_VERSION }} [skip ci]"
          git push https://${{ secrets.PAT }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref }}
        env:
          NEXT_VERSION: ${{ env.NEXT_VERSION }}
          VERSION_CHANGED: ${{ env.VERSION_CHANGED }}
